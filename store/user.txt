export const state = () => ({
    token   	: localStorage.getItem('token'),
    auth    	: null,
    
    selectUser 	: null
})

export const mutations = {
	setToken (state, payload) {
        localStorage.setItem('token', payload);
		state.token = payload;
    },
    setAuth (state, payload) {
        state.auth = payload;
    },
	removeToken(state, payload)
	{
		localStorage.removeItem('token');
		state.token = null;
		state.auth  = null;
	},
	changeSelectUser(state, payload)
	{
		state.selectUser = payload;
	}
}

export const actions = {
	// Proses Login
	login(context, payload) {
		return new Promise((resolve, reject) => {
			this.$axios.post('/login', payload).then((result) => {
				context.commit('setToken', result.data.data.jwt.token);
				context.commit('setAuth', result.data.data.user);
				resolve(result.data);
			}).catch((error) => {
				reject(error);
			});
		});
	},
    
	// Logout
	logout(context, payload) {
		return new Promise((resolve, reject) => {
			context.commit('removeToken');
			resolve(true);
		});
	},

	// Data User
	fetchAuth(context, payload) {
		this.$axios.get('/user/profile').then((result) => {
			context.commit('setAuth', result.data.data.profile);
		}).catch((error) => {
			console.log(error);
		});
	}
}

export const getters = {
   	getAuthUsername: state => {
        return state.auth ? state.auth.username : '';
    },
    getAuthName: state => {
        return state.auth ? state.auth.name : '';
    }
}